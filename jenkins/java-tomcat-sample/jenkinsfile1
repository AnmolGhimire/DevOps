pipeline{
    agent any
    stages{
        stage('build'){
            steps{
                sh 'mvn -f jenkins/java-tomcat-sample/pom.xml clean package'
            }
            post{
                success{
                    echo "archieve artifacts"
                    archiveArtifacts artifacts: '**/*.war', followSymlinks: false
                }
            }
        }
    
        stage('create tomcat image'){
            steps{
                copyArtifacts filter: '**/*.war', fingerprintArtifacts: true, projectName: env.JOB_NAME, selector: specific(env.BUILD_NUMBER)
                echo "building docker image"
                sh '''
                original_pwd=$(pwd -P)
                cd jenkins/java-tomcat-sample
                docker build -t localtomcatimg:$BUILD_NUMBER .
                cd $original_pwd
                sh '''
            }

        }
        stage('deploy to stagging'){
            steps{
                echo "running in stagging env"
                sh '''
                docker container stop tomcatstaggingenv || true
                docker container rm -f tomcatstaggingenv || true
                docker run -itd --name tomcatstaggingenv -p 8089:8080 localtomcatimg:$BUILD_NUMBER
                sh '''
            }
        }
        stage("deploy to production"){
            steps{
                timeout(time:1,unit:'Days'){
                input message:'Approve PRODUCTION deployment?'
                }
                echo "running in production env"
                sh '''
                docker container stop tomcatprodenv || true
                docker container rm tomcatprodenv || true
                docker run -itd --name tomcatprodenv -p 8087:8080 localtomcatimg:$BUILD_NUMBER
                sh '''
            }
        }
    }

        
}


